{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n  const handleVideoLinkSubmit = e => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = url => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      height: \"50vh\",\n      // Ensure the component takes up 50% of screen height\n      backgroundColor: \"#1e1e1e\",\n      padding: \"1rem\",\n      boxSizing: \"border-box\",\n      borderRadius: \"10px\",\n      boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n      maxWidth: \"1000px\"\n    },\n    children: !videoId && !isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVideoUpload,\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          backgroundColor: \"#00ff9d\",\n          color: \"#000\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          cursor: \"pointer\"\n        },\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : isUploading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoLinkSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"videoLink\",\n        placeholder: \"Enter YouTube video URL\",\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          marginBottom: \"0.5rem\",\n          borderRadius: \"4px\",\n          border: \"1px solid #333\",\n          width: \"80%\",\n          color: \"#fff\",\n          backgroundColor: \"#222\"\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          backgroundColor: \"#00ff9d\",\n          color: \"#000\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          height: \"50vh\" // Ensure the component takes up 50% of screen height\n        },\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: videoId,\n          opts: {\n            width: \"100%\",\n            height: \"100%\",\n            playerVars: {\n              autoplay: 1\n            }\n          },\n          onPlay: () => setIsPlaying(true),\n          onPause: () => setIsPlaying(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          style: {\n            padding: \"0.6rem 1.2rem\",\n            backgroundColor: \"#00ff9d\",\n            color: \"#000\",\n            fontSize: \"1rem\",\n            fontWeight: \"bold\",\n            border: \"none\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\"\n          },\n          children: isPlaying ? \"Pause\" : \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"I31pcw1pvWamrjKVA6B+j1hDDks=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useState","YouTube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","_s","isPlaying","setIsPlaying","videoId","setVideoId","isUploading","setIsUploading","togglePlayPause","handleVideoUpload","handleVideoLinkSubmit","e","preventDefault","link","target","elements","videoLink","value","trim","extractYouTubeId","url","regex","match","style","display","flexDirection","justifyContent","height","backgroundColor","padding","boxSizing","borderRadius","boxShadow","maxWidth","children","alignItems","onClick","color","fontSize","fontWeight","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","marginBottom","width","autoFocus","opts","playerVars","autoplay","onPlay","onPause","marginTop","textAlign","_c","$RefreshReg$"],"sources":["/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport YouTube from \"react-youtube\";\n\nfunction VideoPlayer() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n\n  const handleVideoLinkSubmit = (e) => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = (url) => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"50vh\", // Ensure the component takes up 50% of screen height\n        backgroundColor: \"#1e1e1e\",\n        padding: \"1rem\",\n        boxSizing: \"border-box\",\n        borderRadius: \"10px\",\n        boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n        maxWidth: \"1000px\",\n\n      }}\n    >\n      {!videoId && !isUploading ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            onClick={handleVideoUpload}\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              backgroundColor: \"#00ff9d\",\n              color: \"#000\",\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Upload Video\n          </button>\n        </div>\n      ) : isUploading ? (\n        <form\n          onSubmit={handleVideoLinkSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <input\n            type=\"text\"\n            name=\"videoLink\"\n            placeholder=\"Enter YouTube video URL\"\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              marginBottom: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #333\",\n              width: \"80%\",\n              color: \"#fff\",\n              backgroundColor: \"#222\",\n            }}\n            autoFocus\n          />\n          <button\n            type=\"submit\"\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              backgroundColor: \"#00ff9d\",\n              color: \"#000\",\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Submit\n          </button>\n        </form>\n      ) : (\n        <>\n          <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                height: \"50vh\", // Ensure the component takes up 50% of screen height\n\n\n            }}\n          >\n            <YouTube\n              videoId={videoId}\n              opts={{\n                width: \"100%\",\n                height: \"100%\",\n                playerVars: { autoplay: 1 },\n              }}\n              onPlay={() => setIsPlaying(true)}\n              onPause={() => setIsPlaying(false)}\n            />\n          </div>\n          <div\n            style={{\n              marginTop: \"1rem\",\n              textAlign: \"center\",\n            }}\n          >\n            <button\n              onClick={togglePlayPause}\n              style={{\n                padding: \"0.6rem 1.2rem\",\n                backgroundColor: \"#00ff9d\",\n                color: \"#000\",\n                fontSize: \"1rem\",\n                fontWeight: \"bold\",\n                border: \"none\",\n                borderRadius: \"6px\",\n                cursor: \"pointer\",\n              }}\n            >\n              {isPlaying ? \"Pause\" : \"Play\"}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}