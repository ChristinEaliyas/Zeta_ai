{"ast":null,"code":"var _jsxFileName = \"/workspace/Frontend/src/components/Flashcards.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Flashcards({\n  flashcards\n}) {\n  _s();\n  const [currentCard, setCurrentCard] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n  if (flashcards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"1.2rem\"\n      },\n      children: \"No flashcards available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"60vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        perspective: \"1000px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          position: \"relative\",\n          transformStyle: \"preserve-3d\",\n          transition: \"transform 0.6s\",\n          transform: showAnswer ? \"rotateY(180deg)\" : \"rotateY(0deg)\"\n        },\n        onClick: () => setShowAnswer(!showAnswer),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            backfaceVisibility: \"hidden\",\n            backgroundColor: \"#222\",\n            color: \"#fff\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            fontSize: \"1.2rem\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\"\n          },\n          children: flashcards[currentCard].Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: \"100%\",\n            height: \"100%\",\n            backfaceVisibility: \"hidden\",\n            backgroundColor: \"#222\",\n            color: \"#fff\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            fontSize: \"1.2rem\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            transform: \"rotateY(180deg)\"\n          },\n          children: flashcards[currentCard].Answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\",\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowAnswer(false);\n          setCurrentCard((currentCard - 1 + flashcards.length) % flashcards.length);\n        },\n        style: {\n          padding: \"10px 15px\",\n          fontSize: \"1rem\",\n          cursor: \"pointer\",\n          backgroundColor: \"#00ff9d\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          color: \"#1a1a1a\"\n        },\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowAnswer(false);\n          setCurrentCard((currentCard + 1) % flashcards.length);\n        },\n        style: {\n          padding: \"10px 15px\",\n          fontSize: \"1rem\",\n          cursor: \"pointer\",\n          backgroundColor: \"#00ff9d\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          color: \"#1a1a1a\"\n        },\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Flashcards, \"qEu6fYNCiJLN1B8qRC+VpFwSqRE=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Flashcards","flashcards","_s","currentCard","setCurrentCard","showAnswer","setShowAnswer","length","style","textAlign","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","justifyContent","height","width","perspective","position","transformStyle","transition","transform","onClick","backfaceVisibility","backgroundColor","color","borderRadius","cursor","Question","Answer","marginTop","gap","padding","border","_c","$RefreshReg$"],"sources":["/workspace/Frontend/src/components/Flashcards.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction Flashcards({ flashcards }) {\n  const [currentCard, setCurrentCard] = useState(0);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  if (flashcards.length === 0) {\n    return <div style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}>No flashcards available.</div>;\n  }\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"60vh\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          perspective: \"1000px\",\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            position: \"relative\",\n            transformStyle: \"preserve-3d\",\n            transition: \"transform 0.6s\",\n            transform: showAnswer ? \"rotateY(180deg)\" : \"rotateY(0deg)\",\n          }}\n          onClick={() => setShowAnswer(!showAnswer)}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n              backfaceVisibility: \"hidden\",\n              backgroundColor: \"#222\",\n              color: \"#fff\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              fontSize: \"1.2rem\",\n              borderRadius: \"8px\",\n              cursor: \"pointer\",\n            }}\n          >\n            {flashcards[currentCard].Question}\n          </div>\n\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"100%\",\n              backfaceVisibility: \"hidden\",\n              backgroundColor: \"#222\",\n              color: \"#fff\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              fontSize: \"1.2rem\",\n              borderRadius: \"8px\",\n              cursor: \"pointer\",\n              transform: \"rotateY(180deg)\",\n            }}\n          >\n            {flashcards[currentCard].Answer}\n          </div>\n        </div>\n      </div>\n\n      <div style={{ marginTop: \"1rem\", display: \"flex\", gap: \"10px\" }}>\n        <button\n          onClick={() => {\n            setShowAnswer(false);\n            setCurrentCard((currentCard - 1 + flashcards.length) % flashcards.length);\n          }}\n          style={{\n            padding: \"10px 15px\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            backgroundColor: \"#00ff9d\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            color: \"#1a1a1a\",\n          }}\n        >\n          ←\n        </button>\n\n        <button\n          onClick={() => {\n            setShowAnswer(false);\n            setCurrentCard((currentCard + 1) % flashcards.length);\n          }}\n          style={{\n            padding: \"10px 15px\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            backgroundColor: \"#00ff9d\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            color: \"#1a1a1a\",\n          }}\n        >\n          →\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Flashcards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}