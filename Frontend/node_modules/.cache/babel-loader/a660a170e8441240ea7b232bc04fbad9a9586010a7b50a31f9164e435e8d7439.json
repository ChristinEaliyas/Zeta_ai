{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n  const videoContainerRef = useRef(null); // Ref to the video container for dynamic height\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n  const handleVideoLinkSubmit = e => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = url => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n\n  // Dynamically adjust the video player height based on the container\n  const getVideoContainerHeight = () => {\n    if (videoContainerRef.current) {\n      return videoContainerRef.current.clientHeight;\n    }\n    return 400; // Default height in case the container is not available\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: videoContainerRef,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      flexGrow: 1\n    },\n    children: !videoId && !isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVideoUpload,\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          backgroundColor: \"#00ff9d\",\n          color: \"#000\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          cursor: \"pointer\"\n        },\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : isUploading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoLinkSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"videoLink\",\n        placeholder: \"Enter YouTube video URL\",\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          marginBottom: \"0.5rem\",\n          borderRadius: \"4px\",\n          border: \"1px solid #333\",\n          width: \"80%\",\n          color: \"#fff\",\n          backgroundColor: \"#222\"\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"0.6rem 1.2rem\",\n          backgroundColor: \"#00ff9d\",\n          color: \"#000\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          border: \"none\",\n          borderRadius: \"6px\",\n          cursor: \"pointer\"\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          // Take full height of the container\n          width: \"100%\" // Full width\n        },\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: videoId,\n          opts: {\n            width: \"24%\",\n            height: \"13.5%\",\n            // Set height dynamically\n            playerVars: {\n              autoplay: 1\n            }\n          },\n          onPlay: () => setIsPlaying(true),\n          onPause: () => setIsPlaying(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"Mk+XpPxTirJ3hNa8ZBuyaeBPmgY=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useState","useEffect","useRef","YouTube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","_s","isPlaying","setIsPlaying","videoId","setVideoId","isUploading","setIsUploading","videoContainerRef","togglePlayPause","handleVideoUpload","handleVideoLinkSubmit","e","preventDefault","link","target","elements","videoLink","value","trim","extractYouTubeId","url","regex","match","getVideoContainerHeight","current","clientHeight","ref","style","display","flexDirection","alignItems","flexGrow","children","onClick","padding","backgroundColor","color","fontSize","fontWeight","border","borderRadius","cursor","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","marginBottom","width","autoFocus","justifyContent","height","opts","playerVars","autoplay","onPlay","onPause","_c","$RefreshReg$"],"sources":["/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport YouTube from \"react-youtube\";\n\nfunction VideoPlayer() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n  const videoContainerRef = useRef(null); // Ref to the video container for dynamic height\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n\n  const handleVideoLinkSubmit = (e) => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = (url) => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n\n  // Dynamically adjust the video player height based on the container\n  const getVideoContainerHeight = () => {\n    if (videoContainerRef.current) {\n      return videoContainerRef.current.clientHeight;\n    }\n    return 400; // Default height in case the container is not available\n  };\n\n  return (\n    <div ref={videoContainerRef} style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", flexGrow: 1 }}>\n      {!videoId && !isUploading ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <button\n            onClick={handleVideoUpload}\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              backgroundColor: \"#00ff9d\",\n              color: \"#000\",\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Upload Video\n          </button>\n        </div>\n      ) : isUploading ? (\n        <form\n          onSubmit={handleVideoLinkSubmit}\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <input\n            type=\"text\"\n            name=\"videoLink\"\n            placeholder=\"Enter YouTube video URL\"\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              marginBottom: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #333\",\n              width: \"80%\",\n              color: \"#fff\",\n              backgroundColor: \"#222\",\n            }}\n            autoFocus\n          />\n          <button\n            type=\"submit\"\n            style={{\n              padding: \"0.6rem 1.2rem\",\n              backgroundColor: \"#00ff9d\",\n              color: \"#000\",\n              fontSize: \"1rem\",\n              fontWeight: \"bold\",\n              border: \"none\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Submit\n          </button>\n        </form>\n      ) : (\n        <>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              height: \"100%\", // Take full height of the container\n              width: \"100%\", // Full width\n            }}\n          >\n            <YouTube\n              videoId={videoId}\n              opts={{\n                width: \"24%\",\n                height: \"13.5%\", // Set height dynamically\n                playerVars: { autoplay: 1 },\n              }}\n              onPlay={() => setIsPlaying(true)}\n              onPause={() => setIsPlaying(false)}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}