{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer() {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [activeSection, setActiveSection] = useState(null); // Track active section (chapter or transcript)\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const showChapter = () => setActiveSection(\"chapter\");\n  const showTranscript = () => setActiveSection(\"transcript\");\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n  const handleVideoLinkSubmit = e => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = url => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.videoContainer,\n    children: !videoId && !isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.uploadContainer,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVideoUpload,\n        style: styles.uploadButton,\n        children: \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : isUploading ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVideoLinkSubmit,\n      style: styles.uploadForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"videoLink\",\n        placeholder: \"Enter YouTube video URL\",\n        style: styles.uploadInput,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.uploadSubmitButton,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.videoWrapper,\n        children: /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: videoId,\n          opts: {\n            width: \"100%\",\n            height: \"100%\",\n            playerVars: {\n              autoplay: 1\n            }\n          },\n          onPlay: () => setIsPlaying(true),\n          onPause: () => setIsPlaying(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.controls,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          style: styles.button,\n          children: isPlaying ? \"Pause\" : \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.additionalControls,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showChapter,\n          style: styles.toggleButton,\n          children: \"Show Chapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showTranscript,\n          style: styles.toggleButton,\n          children: \"Show Transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sectionWrapper,\n        children: [activeSection === \"chapter\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chapter,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Chapter 1: Introduction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"In this chapter, we introduce the main concepts of the video.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), activeSection === \"transcript\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.transcript,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Transcript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is the full transcript of the video...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"2kPwpf8wqGshKvBvbfXR5JIFgxA=\");\n_c = VideoPlayer;\nconst styles = {\n  videoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100vh\",\n    // Ensure it takes full viewport height\n    backgroundColor: \"#1e1e1e\",\n    padding: \"1rem\",\n    boxSizing: \"border-box\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n    maxWidth: \"1000px\",\n    margin: \"auto\"\n  },\n  uploadContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  uploadButton: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  uploadForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  uploadInput: {\n    padding: \"0.6rem 1.2rem\",\n    marginBottom: \"0.5rem\",\n    borderRadius: \"4px\",\n    border: \"1px solid #333\",\n    width: \"80%\",\n    color: \"#fff\",\n    backgroundColor: \"#222\"\n  },\n  uploadSubmitButton: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  videoWrapper: {\n    flex: 1,\n    // Ensures the video player takes up all available space\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  controls: {\n    marginTop: \"1rem\",\n    textAlign: \"center\"\n  },\n  button: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  additionalControls: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"1rem\"\n  },\n  toggleButton: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#333\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  sectionWrapper: {\n    marginTop: \"1rem\",\n    backgroundColor: \"#2c2c2c\",\n    padding: \"1rem\",\n    borderRadius: \"6px\",\n    color: \"#fff\",\n    flex: 0,\n    // Keeps this section fixed in height\n    maxHeight: \"200px\",\n    // Can be adjusted based on your preference\n    overflowY: \"auto\"\n  },\n  chapter: {\n    marginTop: \"1rem\"\n  },\n  transcript: {\n    marginTop: \"1rem\"\n  }\n};\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useRef","useState","YouTube","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","_s","isPlaying","setIsPlaying","activeSection","setActiveSection","videoId","setVideoId","isUploading","setIsUploading","togglePlayPause","showChapter","showTranscript","handleVideoUpload","handleVideoLinkSubmit","e","preventDefault","link","target","elements","videoLink","value","trim","extractYouTubeId","url","regex","match","style","styles","videoContainer","children","uploadContainer","onClick","uploadButton","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","uploadForm","type","name","placeholder","uploadInput","autoFocus","uploadSubmitButton","videoWrapper","opts","width","height","playerVars","autoplay","onPlay","onPause","controls","button","additionalControls","toggleButton","sectionWrapper","chapter","transcript","_c","display","flexDirection","justifyContent","backgroundColor","padding","boxSizing","borderRadius","boxShadow","maxWidth","margin","alignItems","color","fontSize","fontWeight","border","cursor","marginBottom","flex","marginTop","textAlign","gap","maxHeight","overflowY","$RefreshReg$"],"sources":["/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport YouTube from \"react-youtube\";\n\nfunction VideoPlayer() {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [activeSection, setActiveSection] = useState(null); // Track active section (chapter or transcript)\n  const [videoId, setVideoId] = useState(\"\"); // Track YouTube video ID\n  const [isUploading, setIsUploading] = useState(false); // State to track whether the user is uploading\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const showChapter = () => setActiveSection(\"chapter\");\n  const showTranscript = () => setActiveSection(\"transcript\");\n\n  const handleVideoUpload = () => {\n    setIsUploading(true); // Show the input field to upload the video URL\n  };\n\n  const handleVideoLinkSubmit = (e) => {\n    e.preventDefault();\n    const link = e.target.elements.videoLink.value.trim();\n    if (link) {\n      const videoId = extractYouTubeId(link); // Extract YouTube video ID\n      setVideoId(videoId); // Set the video ID\n      setIsUploading(false); // Hide the input field\n    }\n  };\n\n  // Helper function to extract YouTube video ID from URL\n  const extractYouTubeId = (url) => {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|(?:v=|\\S*?[?&]v=))|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : \"\";\n  };\n\n  return (\n    <div style={styles.videoContainer}>\n      {!videoId && !isUploading ? (\n        <div style={styles.uploadContainer}>\n          <button onClick={handleVideoUpload} style={styles.uploadButton}>\n            Upload Video\n          </button>\n        </div>\n      ) : isUploading ? (\n        <form onSubmit={handleVideoLinkSubmit} style={styles.uploadForm}>\n          <input\n            type=\"text\"\n            name=\"videoLink\"\n            placeholder=\"Enter YouTube video URL\"\n            style={styles.uploadInput}\n            autoFocus\n          />\n          <button type=\"submit\" style={styles.uploadSubmitButton}>\n            Submit\n          </button>\n        </form>\n      ) : (\n        <>\n          <div style={styles.videoWrapper}>\n            <YouTube\n              videoId={videoId}\n              opts={{\n                width: \"100%\",\n                height: \"100%\",\n                playerVars: { autoplay: 1 },\n              }}\n              onPlay={() => setIsPlaying(true)}\n              onPause={() => setIsPlaying(false)}\n            />\n          </div>\n          <div style={styles.controls}>\n            <button onClick={togglePlayPause} style={styles.button}>\n              {isPlaying ? \"Pause\" : \"Play\"}\n            </button>\n          </div>\n          <div style={styles.additionalControls}>\n            <button onClick={showChapter} style={styles.toggleButton}>\n              Show Chapter\n            </button>\n            <button onClick={showTranscript} style={styles.toggleButton}>\n              Show Transcript\n            </button>\n          </div>\n          {/* Conditionally render chapter or transcript based on activeSection */}\n          <div style={styles.sectionWrapper}>\n            {activeSection === \"chapter\" && (\n              <div style={styles.chapter}>\n                <h3>Chapter 1: Introduction</h3>\n                <p>In this chapter, we introduce the main concepts of the video.</p>\n              </div>\n            )}\n            {activeSection === \"transcript\" && (\n              <div style={styles.transcript}>\n                <h3>Transcript</h3>\n                <p>This is the full transcript of the video...</p>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  videoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    height: \"100vh\", // Ensure it takes full viewport height\n    backgroundColor: \"#1e1e1e\",\n    padding: \"1rem\",\n    boxSizing: \"border-box\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n    maxWidth: \"1000px\",\n    margin: \"auto\",\n  },\n  uploadContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  uploadButton: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n  },\n  uploadForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  uploadInput: {\n    padding: \"0.6rem 1.2rem\",\n    marginBottom: \"0.5rem\",\n    borderRadius: \"4px\",\n    border: \"1px solid #333\",\n    width: \"80%\",\n    color: \"#fff\",\n    backgroundColor: \"#222\",\n  },\n  uploadSubmitButton: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n  },\n  videoWrapper: {\n    flex: 1, // Ensures the video player takes up all available space\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  controls: {\n    marginTop: \"1rem\",\n    textAlign: \"center\",\n  },\n  button: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n  },\n  additionalControls: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    gap: \"1rem\",\n  },\n  toggleButton: {\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"#333\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n  },\n  sectionWrapper: {\n    marginTop: \"1rem\",\n    backgroundColor: \"#2c2c2c\",\n    padding: \"1rem\",\n    borderRadius: \"6px\",\n    color: \"#fff\",\n    flex: 0, // Keeps this section fixed in height\n    maxHeight: \"200px\", // Can be adjusted based on your preference\n    overflowY: \"auto\",\n  },\n  chapter: {\n    marginTop: \"1rem\",\n  },\n  transcript: {\n    marginTop: \"1rem\",\n  },\n};\n\nexport default VideoPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}