{"ast":null,"code":"var _jsxFileName = \"/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoPlayer({\n  videoSrc\n}) {\n  _s();\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const togglePlayPause = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.videoContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      style: styles.video,\n      src: videoSrc,\n      controls: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.controls,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        style: styles.button,\n        children: isPlaying ? \"Pause\" : \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoPlayer, \"Rw/PlTgeCTiejpXl1/RzauYRzQI=\");\n_c = VideoPlayer;\nconst styles = {\n  videoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#1e1e1e\",\n    padding: \"1.5rem\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n    maxWidth: \"800px\",\n    margin: \"auto\"\n  },\n  video: {\n    width: \"100%\",\n    borderRadius: \"8px\",\n    outline: \"none\"\n  },\n  controls: {\n    marginTop: \"0.8rem\"\n  },\n  button: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  }\n};\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","VideoPlayer","videoSrc","_s","videoRef","isPlaying","setIsPlaying","togglePlayPause","current","pause","play","style","styles","videoContainer","children","ref","video","src","controls","fileName","_jsxFileName","lineNumber","columnNumber","onClick","button","_c","display","flexDirection","alignItems","justifyContent","backgroundColor","padding","borderRadius","boxShadow","maxWidth","margin","width","outline","marginTop","color","fontSize","fontWeight","border","cursor","$RefreshReg$"],"sources":["/home/amal/Desktop/lenin - project/frontend/src/components/VideoPlayer.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nfunction VideoPlayer({ videoSrc }) {\n  const videoRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const togglePlayPause = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  return (\n    <div style={styles.videoContainer}>\n      <video ref={videoRef} style={styles.video} src={videoSrc} controls={false} />\n      <div style={styles.controls}>\n        <button onClick={togglePlayPause} style={styles.button}>\n          {isPlaying ? \"Pause\" : \"Play\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst styles = {\n  videoContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#1e1e1e\",\n    padding: \"1.5rem\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.3)\",\n    maxWidth: \"800px\",\n    margin: \"auto\",\n  },\n  video: {\n    width: \"100%\",\n    borderRadius: \"8px\",\n    outline: \"none\",\n  },\n  controls: {\n    marginTop: \"0.8rem\",\n  },\n  button: {\n    padding: \"0.6rem 1.2rem\",\n    backgroundColor: \"#00ff9d\",\n    color: \"#000\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n  },\n};\n\nexport default VideoPlayer;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,QAAQ,CAACI,OAAO,EAAE;MACpB,IAAIH,SAAS,EAAE;QACbD,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;MAC1B,CAAC,MAAM;QACLL,QAAQ,CAACI,OAAO,CAACE,IAAI,CAAC,CAAC;MACzB;MACAJ,YAAY,CAAC,CAACD,SAAS,CAAC;IAC1B;EACF,CAAC;EAED,oBACEL,OAAA;IAAKW,KAAK,EAAEC,MAAM,CAACC,cAAe;IAAAC,QAAA,gBAChCd,OAAA;MAAOe,GAAG,EAAEX,QAAS;MAACO,KAAK,EAAEC,MAAM,CAACI,KAAM;MAACC,GAAG,EAAEf,QAAS;MAACgB,QAAQ,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EtB,OAAA;MAAKW,KAAK,EAAEC,MAAM,CAACM,QAAS;MAAAJ,QAAA,eAC1Bd,OAAA;QAAQuB,OAAO,EAAEhB,eAAgB;QAACI,KAAK,EAAEC,MAAM,CAACY,MAAO;QAAAV,QAAA,EACpDT,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnB,EAAA,CAzBQF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2BpB,MAAMW,MAAM,GAAG;EACbC,cAAc,EAAE;IACda,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,QAAQ;IACjBC,YAAY,EAAE,MAAM;IACpBC,SAAS,EAAE,+BAA+B;IAC1CC,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE;EACV,CAAC;EACDnB,KAAK,EAAE;IACLoB,KAAK,EAAE,MAAM;IACbJ,YAAY,EAAE,KAAK;IACnBK,OAAO,EAAE;EACX,CAAC;EACDnB,QAAQ,EAAE;IACRoB,SAAS,EAAE;EACb,CAAC;EACDd,MAAM,EAAE;IACNO,OAAO,EAAE,eAAe;IACxBD,eAAe,EAAE,SAAS;IAC1BS,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE,MAAM;IACdV,YAAY,EAAE,KAAK;IACnBW,MAAM,EAAE;EACV;AACF,CAAC;AAED,eAAe1C,WAAW;AAAC,IAAAwB,EAAA;AAAAmB,YAAA,CAAAnB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}